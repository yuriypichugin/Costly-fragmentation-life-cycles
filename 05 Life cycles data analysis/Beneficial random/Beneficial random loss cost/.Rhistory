source('~/Projects/Fragmentation with costs/Data/True random risk cost 2020 Low values/ScanCombiner.R')
source('~/Projects/Fragmentation with costs/Data/Beneficial random risk cost 2020 Low values/ScanCombiner.R')
source('~/Projects/Fragmentation with costs/Data/Detrimental random risk cost 2020 Low values/ScanCombiner.R')
source('~/Projects/Fragmentation with costs/Data/Unimodal random risk cost 2020 Low values/ScanCombiner.R')
source('~/Projects/Fragmentation with costs/Local simulations/Classes abundance and groups size/True random risk cost 2020 LV/ScanProcessor.R')
source('~/Projects/Fragmentation with costs/Local simulations/Classes abundance and groups size/True random risk cost 2020 LV/ScanProcessor.R')
if(Write2File==1){svg(file = "ClassesVsRisk_v9LV.svg", height=pdfSizeY, width=pdfSizeX)}
if(Write2File==2){cairo_pdf(file="ClassesVsRisk_v9LV.pdf", height=pdfSizeY, width=pdfSizeX)}
par(pty="s", mgp=c(2.4,0.6,0.0), xpd=T, mar=c(Bottom,Left, Top, Right), cex.axis=1.4, bty="o", las = 1)
CLR_list=c(CLR_bin, CLR_equal, CLR_seed, CLR_other)
MyBP2<-barplot(ClassPartitions[,], col=CLR_list, axes=F, ann=F, xlab="Fragmentation risk", ylab="Fraction of environments", cex.lab=1.6, xaxs="i", yaxs="i", border=NA, space=0)
# Xarray <- seq(0, 20, length.out = dim(Data)[2])
# plot( c(0,20), c(0,1), type = "l", col="white", lwd = 1, ylim=c(0,1), xaxs="i", yaxs="i", ann=F)
# lines(Xarray, ClassPartitions[1,], col=CLR_list[1], lwd=5)
# lines(Xarray, ClassPartitions[2,], col=CLR_list[2], lwd=5)
# lines(Xarray, ClassPartitions[3,], col=CLR_list[3], lwd=5)
# lines(Xarray, ClassPartitions[4,], col=CLR_list[4], lwd=5)
# title(xlab="Fragmentation risk", ylab="Fraction of environments", cex.lab=1.6)
SQ=seq(0,1, length.out = 6)
SQT=c("0.0", "0.2", "0.4", "0.6", "0.8", "1.0")
axis(2, at=SQ, labels=SQT)
SQX=seq(0, 20.0, length.out=5)
PosX=SQX/length(SQX)*dim(ClassPartitions)[2]
axis(1, at=1*SQX, labels=SQX)
if(Write2File>0){dev.off()}
if(Write2File==1){svg(file = "ClassesVsRisk_v9LV.svg", height=pdfSizeY, width=pdfSizeX)}
if(Write2File==2){cairo_pdf(file="ClassesVsRisk_v9LV.pdf", height=pdfSizeY, width=pdfSizeX)}
par(pty="s", mgp=c(2.4,0.6,0.0), xpd=T, mar=c(Bottom,Left, Top, Right), cex.axis=1.4, bty="o", las = 1)
CLR_list=c(CLR_bin, CLR_equal, CLR_seed, CLR_other)
MyBP2<-barplot(ClassPartitions[,], col=CLR_list, axes=F, ann=F, xlab="Fragmentation risk", ylab="Fraction of environments", cex.lab=1.6, xaxs="i", yaxs="i", border=NA, space=0)
# Xarray <- seq(0, 20, length.out = dim(Data)[2])
# plot( c(0,20), c(0,1), type = "l", col="white", lwd = 1, ylim=c(0,1), xaxs="i", yaxs="i", ann=F)
# lines(Xarray, ClassPartitions[1,], col=CLR_list[1], lwd=5)
# lines(Xarray, ClassPartitions[2,], col=CLR_list[2], lwd=5)
# lines(Xarray, ClassPartitions[3,], col=CLR_list[3], lwd=5)
# lines(Xarray, ClassPartitions[4,], col=CLR_list[4], lwd=5)
# title(xlab="Fragmentation risk", ylab="Fraction of environments", cex.lab=1.6)
SQ=seq(0,1, length.out = 6)
SQT=c("0.0", "0.2", "0.4", "0.6", "0.8", "1.0")
axis(2, at=SQ, labels=SQT)
SQX=seq(0, 20.0, length.out=5)
PosX=SQX/length(SQX)*dim(ClassPartitions)[2]
axis(1, at=10*SQX, labels=0.1*SQX)
if(Write2File>0){dev.off()}
source('~/Projects/Fragmentation with costs/Local simulations/Classes abundance and groups size/Detrimental random risk cost 2020 LV/DecRiskScanProcessor.R')
source('~/Projects/Fragmentation with costs/Local simulations/Classes abundance and groups size/Unimodal random delay cost 2020/DelayScanProcessor.R')
source('~/Projects/Fragmentation with costs/Local simulations/Classes abundance and groups size/Unimodal random risk cost 2020 HV/ScanProcessor.R')
source('~/Projects/Fragmentation with costs/Local simulations/Classes abundance and groups size/Unimodal random loss cost 2020/ScanProcessor.R')
source('~/Projects/Fragmentation with costs/Local simulations/Classes abundance and groups size/Beneficial random delay cost 2020/DelayScanProcessor.R')
source('~/Projects/Fragmentation with costs/Local simulations/Classes abundance and groups size/Beneficial random risk cost 2020 HV/ScanProcessor.R')
source('~/Projects/Fragmentation with costs/Local simulations/Classes abundance and groups size/Beneficial random loss cost 2020/ScanProcessor.R')
